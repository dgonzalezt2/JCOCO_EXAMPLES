Function: factorial/1
Constants: None, 0, 1
Locals: n
Globals: factorial

BEGIN                  
    LOAD_FAST           0           constante 0
    LOAD_CONST          1           constante 1
    COMPARE_OP          2           n==0
    POP_JUMP_IF_FALSE   recursion
    LOAD_CONST          2           cargo la constante 1
    RETURN_VALUE

recursion:    
    LOAD_FAST           0           cargo la n
    LOAD_GLOBAL         0           llama la funcion factorial
    LOAD_FAST           0           llama la n
    LOAD_CONST          2           cargo el 1 para poder restarlo (n-1)
    BINARY_SUBTRACT                 resto 
    CALL_FUNCTION       1           llamo la fnciono mandando n-1
    BINARY_MULTIPLY                 
    RETURN_VALUE

END 

Function: main/0
Constants:  none, 5
Locals: none
Globals: print, factorial

BEGIN
    LOAD_GLOBAL         0
    LOAD_GLOBAL         1
    LOAD_CONST          1             llamo la constante 5
    CALL_FUNCTION       1
    CALL_FUNCTION       1

fin:
    POP_TOP             
    LOAD_CONST          0
    RETURN_VALUE

END